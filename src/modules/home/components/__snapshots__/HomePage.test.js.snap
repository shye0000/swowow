// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HomePage render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HomePage
    fetchSuccess={false}
    fetching={false}
    root={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="home-counter"
        >
          5
        </div>,
        <div
          className="home-msg"
        >
          <Msg
            counter={5}
            fetchSuccess={false}
            fetching={false}
          />
          <Animate
            animation={Object {}}
            component="span"
            componentProps={Object {}}
            onAppear={[Function]}
            onEnd={[Function]}
            onEnter={[Function]}
            onLeave={[Function]}
            transitionAppear={true}
            transitionEnter={true}
            transitionLeave={true}
            transitionName="fade"
          />
        </div>,
      ],
      "className": "home",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": 5,
          "className": "home-counter",
        },
        "ref": null,
        "rendered": 5,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Msg
              counter={5}
              fetchSuccess={false}
              fetching={false}
            />,
            <Animate
              animation={Object {}}
              component="span"
              componentProps={Object {}}
              onAppear={[Function]}
              onEnd={[Function]}
              onEnter={[Function]}
              onLeave={[Function]}
              transitionAppear={true}
              transitionEnter={true}
              transitionLeave={true}
              transitionName="fade"
            />,
          ],
          "className": "home-msg",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "counter": 5,
              "fetchSuccess": false,
              "fetching": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "animation": Object {},
              "children": null,
              "component": "span",
              "componentProps": Object {},
              "onAppear": [Function],
              "onEnd": [Function],
              "onEnter": [Function],
              "onLeave": [Function],
              "transitionAppear": true,
              "transitionEnter": true,
              "transitionLeave": true,
              "transitionName": "fade",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="home-counter"
          >
            5
          </div>,
          <div
            className="home-msg"
          >
            <Msg
              counter={5}
              fetchSuccess={false}
              fetching={false}
            />
            <Animate
              animation={Object {}}
              component="span"
              componentProps={Object {}}
              onAppear={[Function]}
              onEnd={[Function]}
              onEnter={[Function]}
              onLeave={[Function]}
              transitionAppear={true}
              transitionEnter={true}
              transitionLeave={true}
              transitionName="fade"
            />
          </div>,
        ],
        "className": "home",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": 5,
            "className": "home-counter",
          },
          "ref": null,
          "rendered": 5,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Msg
                counter={5}
                fetchSuccess={false}
                fetching={false}
              />,
              <Animate
                animation={Object {}}
                component="span"
                componentProps={Object {}}
                onAppear={[Function]}
                onEnd={[Function]}
                onEnter={[Function]}
                onLeave={[Function]}
                transitionAppear={true}
                transitionEnter={true}
                transitionLeave={true}
                transitionName="fade"
              />,
            ],
            "className": "home-msg",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "counter": 5,
                "fetchSuccess": false,
                "fetching": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "animation": Object {},
                "children": null,
                "component": "span",
                "componentProps": Object {},
                "onAppear": [Function],
                "onEnd": [Function],
                "onEnter": [Function],
                "onLeave": [Function],
                "transitionAppear": true,
                "transitionEnter": true,
                "transitionLeave": true,
                "transitionName": "fade",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
